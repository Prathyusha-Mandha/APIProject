// <auto-generated />
using APIProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIProject.Migrations
{
    [DbContext(typeof(PetContext))]
    partial class PetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIProject.Model.AdoptionCenter", b =>
                {
                    b.Property<int>("CenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CenterId"));

                    b.Property<string>("CenterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CenterId");

                    b.ToTable("AdoptionCenters");

                    b.HasData(
                        new
                        {
                            CenterId = 1,
                            CenterName = "Happy Paws",
                            ContactNumber = "1234567890",
                            Email = "happypaws@test.com",
                            Location = "City A"
                        },
                        new
                        {
                            CenterId = 2,
                            CenterName = "Safe Haven",
                            ContactNumber = "0987654321",
                            Email = "safehaven@test.com",
                            Location = "City B"
                        });
                });

            modelBuilder.Entity("APIProject.Model.AdoptionRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RequestId");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AdoptionRequests");

                    b.HasData(
                        new
                        {
                            RequestId = 1,
                            PetId = 1,
                            PetName = "Bella",
                            Status = "Pending",
                            UserId = 2,
                            UserName = "John"
                        });
                });

            modelBuilder.Entity("APIProject.Model.PetDetails", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<string>("CenterName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PetId");

                    b.HasIndex("CenterId");

                    b.ToTable("PetDetails");

                    b.HasData(
                        new
                        {
                            PetId = 1,
                            Age = 2,
                            Breed = "Labrador",
                            CenterId = 1,
                            CenterName = "Happy Paws",
                            PetName = "Bella",
                            Status = "Available",
                            Type = "Dog"
                        },
                        new
                        {
                            PetId = 2,
                            Age = 1,
                            Breed = "Persian",
                            CenterId = 1,
                            CenterName = "Happy Paws",
                            PetName = "Milo",
                            Status = "Available",
                            Type = "Cat"
                        });
                });

            modelBuilder.Entity("APIProject.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "admin123",
                            Role = "Admin",
                            UserEmail = "admin@test.com",
                            Username = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "john123",
                            Role = "User",
                            UserEmail = "john@test.com",
                            Username = "John"
                        });
                });

            modelBuilder.Entity("APIProject.Model.AdoptionRequest", b =>
                {
                    b.HasOne("APIProject.Model.PetDetails", null)
                        .WithMany("AdoptionRequests")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIProject.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("APIProject.Model.PetDetails", b =>
                {
                    b.HasOne("APIProject.Model.AdoptionCenter", "Center")
                        .WithMany("Pets")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("APIProject.Model.AdoptionCenter", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("APIProject.Model.PetDetails", b =>
                {
                    b.Navigation("AdoptionRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
